# perl highlighting

LIBC       = shared
#LIBC       = static
#OUT        = Release
#MAPFILES   = 1
CONSOLE    = 1
OPTIMIZE   = size

#PDB        = 2				#?? keep enabled, executable is almost the same, except embedded link to pdb file

OLDCRT     = 1

!if "$PLATFORM" ne "win32"
	# linux/cygwin + GCC
	STDLIBS   = stdc++ GL
	!if "$PLATFORM" ne "cygwin"
		STDLIBS += dl	# dlopen() and friends
	!endif
!endif

!if "$COMPILER" eq "VisualC"
	CPP_EXCEPT = 0		# used with WIN32_USE_SEH in Core.h
	!if "$OLDCRT" eq "1"
		# options for crtexe2.c
		#?? place building of this obj separately, use compiled obj file here
		INCLUDES = $R/libs/oldcrt $R/libs/oldcrt/PlatformSDK
		OBJDIR   = $R/obj/oldcrt
		DEFINES  = CRTDLL _CRTBLD
		#??
		OPTIONS  = {
			-GS-	# disable buffer security checks (VC8+, on by default)
			-GR-	# disable C++ RTTI (on by default in VC8+) - make switch for genmake??
		}
		# add crtexe2.c to project
		sources(MAIN) = $R/libs/oldcrt/crtexe2.c
		INCLUDES =	# reset INCLUDES
		DEFINES  =	# reset DEFINES
		# options for project
		OPTIONS = -GS- -GR- #?? common for VC8+
		WDKCRT = "c:/!msvcrt"
		LINKFLAGS = {
			-nodefaultlib:libcmt.lib -nodefaultlib:msvcprt.lib
			-manifest:no
			$WDKCRT/lib/Win32/msvcrt.lib
			$WDKCRT/lib/Win32/wdk_msvcrt_win2000.obj	# required - has different mainCRTStartup
#			$WDKCRT/lib/Win32/wdk_oldnames.lib			# not required
		}
	!endif
!endif

!if "$COMPILER" eq "GnuC"
	LIBC      = shared
	OPTIONS   = -msse									# enable SSE instructions
	OPTIONS   += -fno-strict-aliasing					# required for our uint_cast()-based FP hacks
	OPTIONS   += -fno-stack-protector					# this will remove GLIBC_2.4 dependency
	OPTIONS   += {
		# disable some warnings
		-Wno-invalid-offsetof							#?? this flag is for C++ only, not for C
	}
!endif


LIBRARIES  = $R/libs $R/libs/xbox
OBJDIR     = $R/obj/$PRJ-$PLATFORM
STDLIBS   += SDL SDLmain

INCLUDES += . $R/Core $R/Unreal $R/libs/include
!if "$PLATFORM" eq "win32"
	INCLUDES += $R/libs/includewin32
!endif

# smaller zlib
DEFINES +=				\
	DYNAMIC_CRC_TABLE	\
	BUILDFIXED


# libraries
DDS_LIBS = {
	# ... dds decompression
	$R/libs/ddslib.c
}


NV_LIBS = {
	$R/libs/nvtt/nvcore/*.cpp
	$R/libs/nvtt/nvimage/*.cpp
#	$R/libs/nvtt/nvmath/*.cpp
}
INCLUDES += $R/libs/nvtt


UE3_LIBS = {
	# ... lzo for compressed UE3 packages
	$R/libs/lzo/lzo_init.c
	$R/libs/lzo/lzo1x_d2.c
	# ... zlib for compressed UE3 packages
	$R/libs/zlib/*.c
	# ... lzx for compresses XBox360 UE3 packages
	$R/libs/mspack/lzxd.c
}

IOS_LIBS = {
	$R/libs/PowerVR/*.cpp
}
INCLUDES += $R/libs/PowerVR
