# perl highlighting

LIBC       = shared
#LIBC       = static
#OUT        = Release
#MAPFILES   = 1
CONSOLE    = 1
OPTIMIZE   = size

PDB        = 2				# keep enabled, executable is almost the same, except embedded link to pdb file

OLDCRT     = 1


#------------------------------------------------
#	Compiler-specific options
#------------------------------------------------

!if "$PLATFORM" ne "win32"
	# linux/cygwin + GCC
	STDLIBS   = stdc++ GL
	!if "$PLATFORM" ne "cygwin"
		STDLIBS += dl	# dlopen() and friends
	!endif
!endif

!if "$COMPILER" eq "VisualC"
	CPP_EXCEPT = 0										# used with WIN32_USE_SEH in Core.h
	OPTIONS = -GS- -GR- 								#?? VC8+, use always?
	!if "$OLDCRT" eq "1"
		WDKCRT = $R/../Libs/msvcrt
		!include $WDKCRT/msvcrt.project
	!endif
!endif

!if "$COMPILER" eq "GnuC"
	LIBC      = shared
	OPTIONS   = -msse									# enable SSE instructions
	OPTIONS   += -fno-strict-aliasing					# required for our uint_cast()-based FP hacks
	OPTIONS   += -fno-stack-protector					# this will remove GLIBC_2.4 dependency
	OPTIONS   += {
		# disable some warnings
		-Wno-invalid-offsetof							#?? this flag is for C++ only, not for C
	}
!endif


#------------------------------------------------
#	Third-party libraries
#------------------------------------------------

OBJDIR = $R/obj/libs-$PLATFORM


#?? remove this library, cannot be used anymore
sources(DDS_LIBS) = {
	# ... dds decompression
	$R/libs/ddslib.c
}


push(INCLUDES)
INCLUDES = $R/libs/nvtt

sources(NV_LIBS) = {
	$R/libs/nvtt/nvcore/*.cpp
	$R/libs/nvtt/nvimage/*.cpp
#	$R/libs/nvtt/nvmath/*.cpp
}

pop(INCLUDES)


# defines for smaller zlib
push(DEFINES)
push(INCLUDES)

DEFINES = DYNAMIC_CRC_TABLE BUILDFIXED NO_GZIP
INCLUDES = $R/libs/include

sources(UE3_LIBS) = {
	# ... lzo for compressed UE3 packages
	$R/libs/lzo/lzo_init.c
	$R/libs/lzo/lzo1x_d2.c
	# ... zlib for compressed UE3 packages
	$R/libs/zlib/*.c
	# ... lzx for compresses XBox360 UE3 packages
	$R/libs/mspack/lzxd.c
}

pop(INCLUDES)
pop(DEFINES)


sources(IOS_LIBS) = {
	$R/libs/PowerVR/*.cpp
}


#------------------------------------------------
#	Project-specific options
#------------------------------------------------

OBJDIR     = $R/obj/$PRJ-$PLATFORM
LIBRARIES  = $R/libs
STDLIBS   += SDL SDLmain
INCLUDES  += . $R/Core $R/Unreal $R/libs/include $R/libs/nvtt $R/libs/PowerVR

!if "$PLATFORM" eq "win32"
	INCLUDES += $R/libs/includewin32
!endif
