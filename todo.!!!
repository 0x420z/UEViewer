! options for:
  - option to toggle lighting
  - option to toggle texturing
  * toggle material-to-color display (different materials -- different colors, no texturing)
  - move wireframe selection to CMeshViewer/CMeshInstance
! move parts of VertMeshViewer::Test to MeshViewer
! packages have tree-like structure of objects, should use whole tree to map export->import (use
  package's "package" field recursively; note: depth can be any)
  * load proper package
  - use object with the same path
- change alternative skin (?)
- correct wireframe (w/o texturing)
- material viewer: plane, box
  ? browser for loaded objects
  ? option to load all objects from package

Animation:
- realtime playback
- looped animation playback

Mesh:
- display as wireframe

! UObject:
  - EndLoad():
    1) sort by package/offset; priority for CURRENT package
    2) add assert before serialization: should not be already loaded (bool flag for UObject)
  - add 2 global lists: complete objects and objects, required serialization; use
    bool flag to check, which list holds object
  ? can enumerate properties using FindProperty() function: add argument 'enumerator', which will
    be used for each property; if function return 'false' - stop iterating. Field searching may be
    easily implemented using this tech.

! rigid parts are not displayed in LOD mode
? X-axis (red) should look at viewer; now - looking forward (should negate X axis)
! should rotate/offset models

- try to compile with MinGW or for Linux


EXTRA KEYS:
~~~~~~~~~~~
- show boxes
- show bone names


NOTES:
~~~~~~
- check XGame/Classes/SpeciesType.uc + Species_*.uc -- setting many properties for
  player model
- system/*.upl: files, containing links between meshes/skins/voices/names/portraits etc
  http://wiki.beyondunreal.com/wiki/UPL_File
- 2K4_NvidiaIntro has animation+model to be the same names, different types only
  * used from MOV-UT2004-Intro.ut2
- q2 model axis: forward/left/up (?); q2 world axis: forward/right/up (?); ut model axis
  is right/forward/up
